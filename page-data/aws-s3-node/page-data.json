{"componentChunkName":"component---src-templates-blog-post-js","path":"/aws-s3-node/","result":{"data":{"site":{"siteMetadata":{"title":"블로그 공사중"}},"markdownRemark":{"id":"ff5f0d16-1812-5314-9f37-4732cdaed03a","excerpt":"개발 중 발생했던 골치 아팠던 이슈 복기용으로 적는다. 발단 Node.js에서 aws sdk를 이용해 S3에 파일을 업로드 할 일이 생겼다.\n적당히 개발 후 돌려보는데 Node.js단에서 자꾸 크래시가 나는 일이 계속되었다. Assertion 'parser->current_buffer…","html":"<p>개발 중 발생했던 골치 아팠던 이슈 복기용으로 적는다.</p>\n<h2>발단</h2>\n<p>Node.js에서 aws sdk를 이용해 S3에 파일을 업로드 할 일이 생겼다.\n적당히 개발 후 돌려보는데 Node.js단에서 자꾸 크래시가 나는 일이 계속되었다.</p>\n<deckgo-highlight-code language=\"log\"  >\n          <code slot=\"code\">[1] /Users/mango/.nvm/versions/node/v16.9.0/bin/node[56951]: ../src/node_http_parser.cc:517:static void node::(anonymous namespace)::Parser::Execute(const FunctionCallbackInfo&lt;v8::Value&gt; &amp;): Assertion `parser-&gt;current_buffer_.IsEmpty()&#39; failed.</code>\n        </deckgo-highlight-code>\n<p><code>Assertion 'parser->current_buffer_.IsEmpty()' failed.</code> ???</p>\n<h2>이게 웬 에러야</h2>\n<p>대체 이게 무슨 에러지 하고 찾아보았는데, 다음과 같은 <a href=\"https://github.com/aws/aws-sdk-js-v3/issues/2843\">Opened Issue</a>가 있었다.\nOpened Issue만 보면 머리가 지끈거리기 시작하면서 어지러워진다.\n심지어 만들어진 지 1년이 넘은 이슈다. 대체 무슨 문제길래?\n여튼 한 번 내용을 보자.</p>\n<p>S3로 대용량 파일을 올리려다 발생한 에러라고 한다.\n로컬 머신에서는 잘 작동하는데, EKS로 올린 EC2에서는 data size 관계 없이 항상 발생한다고 한다.\n대체 왜 그럴까?</p>\n<p>밑의 의견들을 보니, 파일 사이즈를 정확히 5MB으로 올렸을 때, Multipart Upload chunk를 2개를 만드는데,\n첫번째 chunk에 데이터가 5MB 다 들어가고 두번째 chunk가 텅텅 빈 채로 body에 들어가게 되면서 문제가 생긴다는 주장이 있다.\n그런데 왜 0 byte body를 받는다고 죽는 걸까?</p>\n<hr>\n<p><a href=\"\"></a></p>\n<p>더 자세한 문제를 보기 위해 Node.js쪽을 보자. 여기에도 <a href=\"https://github.com/nodejs/node/issues/39671\">관련 이슈</a>가 올라와 있다.</p>\n<blockquote>\n<p>Basically the AWS server sends first a HTTP/1.1 100 Continue as requested and then the HTTP 200 OK.</p>\n<p>If the two messages are received too closely (less than 5ms away) then the execute is somehow called on the same parser before the previous call even returns.</p>\n</blockquote>\n<p>Node.js가 <code>100 Continue</code>와 <code>200 OK</code>를 짧은 시간(5ms) 이내에 동시에 받게 되면 제대로 파싱하지 못하고 죽기 때문이다.\n이제 5MB 파일을 업로드하며 테스트했던 사람의 케이스가 이해가 되기 시작한다.\n용량이 0인 chunk라면 처리 속도가 매우 빠를 테니 짧은 시간 내에 두 개 이상의 chunk response를 받게 될 가능성이 올라가고,\n한 번이라도 그런 문제가 발생하는 순간 Assertion crash.\n경험상 어떤 크기의 파일이라도 여러번 시도하다 보면 한 번씩 터졌기 때문에, 무조건 터질 가능성이 있다고 봐야 했다.</p>\n<h2>고쳐주세요</h2>\n<p>AWS SDK쪽에선 고칠 생각이 없었고(생각해보면 당연하다. Node.js의 버그인데 AWS쪽에서 고칠 이유가?),\n다행히도 Node.js쪽에서 <a href=\"https://github.com/nodejs/node/pull/43369\">패치</a>를 했기 때문에,\n해당 버전 이상(v18.6.0+, v16.17.0+)의 Node.js에서는 위 버그가 일어나지 않는다.</p>\n<p>생각해보면 꽤 위험한 서버 취약점이 될 수도 있는 버그같다.\n사용자 입력 주소로 요청을 보내는 서버라면, 그 서버를 죽일 수 있는 것 아닌가?\n지금은 고쳐져서 정말 다행이다.</p>\n<h2>Reference</h2>\n<p><a href=\"https://github.com/aws/aws-sdk-js-v3/issues/2843\">https://github.com/aws/aws-sdk-js-v3/issues/2843</a></p>\n<p><a href=\"https://github.com/nodejs/node/issues/39671\">https://github.com/nodejs/node/issues/39671</a></p>\n<p><a href=\"https://github.com/nodejs/node/pull/43369\">https://github.com/nodejs/node/pull/43369</a></p>","frontmatter":{"title":"aws s3 sdk와 Node.js의 충돌 문제","date":"June 30, 2023","description":"Node.js version <= 16.16에서 발생하는 버그"}},"previous":{"fields":{"slug":"/color-picker/"},"frontmatter":{"title":"Colorpicker 만들기"}},"next":{"fields":{"slug":"/how-to-know-webapp/"},"frontmatter":{"title":"이 앱이 웹앱인지 아닌지 어떻게 알 수 있을까?"}}},"pageContext":{"id":"ff5f0d16-1812-5314-9f37-4732cdaed03a","previousPostId":"fc19adf4-f96a-58ff-87c3-1e25388a3f14","nextPostId":"3e9d17b6-40ca-5237-b89e-0ed412d0240b"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}