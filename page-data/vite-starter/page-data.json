{"componentChunkName":"component---src-templates-blog-post-js","path":"/vite-starter/","result":{"data":{"site":{"siteMetadata":{"title":"블로그 공사중"}},"markdownRemark":{"id":"1e1efec4-15c2-567b-9ba6-2ffcd251a752","excerpt":"기존 레포를 vite로 마이그레이션 할 일이 있어서 vite를 처음 써 봤는데, 기존 방식과 달라서 헤맸었다. 따라서 정리. vite? 번들러(bundler) 툴이다. 디펜던시들을 사전 번들링(esbuild로 한다) 하고, 소스코드들은 rollup으로 번들링한다.\n그래서 webpack…","html":"<p>기존 레포를 vite로 마이그레이션 할 일이 있어서 vite를 처음 써 봤는데, 기존 방식과 달라서 헤맸었다.</p>\n<p>따라서 정리.</p>\n<h2>vite?</h2>\n<p>번들러(bundler) 툴이다. 디펜던시들을 사전 번들링(esbuild로 한다) 하고, 소스코드들은 rollup으로 번들링한다.\n그래서 webpack 같은 기존 툴보다 훨씬 빠르다고 주장하는데, 반대로 esbuild만 쓰다 vite를 쓰게 되면 훨씬 느려진 것을 체감할 수 있다...</p>\n<p>vite 측에선 rollup의 유연성을 위해 채택했다고 하는데, 사실 개인적으로도 맞는 판단이라고 생각한다.\nesbuild는 진짜 뭐 없다. code spliting, TS type check 등의 기능들도 지원하지 않는다. 걍 빠르고 끝.\n물론 esbuild 또한 점점 이것저것 개발하고 있다고 하는데, 아직은 기능들이 빈약한 것은 어쩔 수 없는 듯.</p>\n<h2>vite 기본 골자</h2>","frontmatter":{"title":"Vite","date":"April 28, 2023","description":"vite는 어떻게 써야하지"}},"previous":{"fields":{"slug":"/threejs-dispose/"},"frontmatter":{"title":"Three.js 에서 dispose()는 어떻게 작동할까?"}},"next":null},"pageContext":{"id":"1e1efec4-15c2-567b-9ba6-2ffcd251a752","previousPostId":"3bdd47f6-b1f4-5502-988d-8101103e4639","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}